- name: Configure Nodes
  hosts: all
  become: yes
  tasks:
    - name: Disable swap on all nodes
      ansible.builtin.command: swapoff -a

    - name: Load kernel modules
      ansible.builtin.copy:
        dest: /etc/modules-load.d/k8s.conf
        content: |
          overlay
          br_netfilter

    - name: Add kernel modules
      community.general.modprobe:
        name: "{{ item }}"
        state: present
      loop:
        - overlay
        - br_netfilter

    - name: Configure sysctl parameters
      ansible.builtin.sysctl:
        name: "{{ item.name }}"
        value: "{{ item.value }}"
        state: present
        sysctl_set: yes
        reload: yes
      loop:
        - { name: "net.bridge.bridge-nf-call-iptables", value: "1" }
        - { name: "net.bridge.bridge-nf-call-ip6tables", value: "1" }
        - { name: "net.ipv4.ip_forward", value: "1" }

    - name: Create containerd config directory
      ansible.builtin.file:
        path: /etc/containerd
        state: directory

    - name: Install containerd dependencies
      ansible.builtin.apt:
        pkg:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - lsb-release

    - name: Add Kubernetes APT repository
      ansible.builtin.apt_repository:
        repo: "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.asc] https://pkgs.k8s.io/core:/stable:/v1.29/deb/ /"
        state: present
        update_cache: yes

    - name: Install Kubernetes components
      ansible.builtin.apt:
        pkg:
          - kubelet
          - kubeadm
          - kubectl
        state: latest
        update_cache: yes

    - name: Hold Kubernetes packages
      ansible.builtin.shell: apt-mark hold kubelet kubectl kubeadm

- name: Setup Control Plane Node
  hosts: master
  become: true
  tasks:
    - name: Initialize kubeadm
      ansible.builtin.shell: sudo kubeadm init --pod-network-cidr=10.244.0.0/16 --control-plane-endpoint "{{ ansible_host }}:6443"

    - name: Create kubeconfig directory
      ansible.builtin.file:
        path: "{{ ansible_env.HOME }}/.kube"
        state: directory
        mode: "0755"

    - name: Copy kubeconfig file
      shell: sudo cp -i /etc/kubernetes/admin.conf {{ ansible_env.HOME }}/.kube/config

    - name: Set correct permissions on kubeconfig file
      shell: sudo chown $(id -u):$(id -g) {{ ansible_env.HOME }}/.kube/config

    - name: Install Flannel CNI
      ansible.builtin.shell: kubectl apply -f https://raw.githubusercontent.com/flannel-io/flannel/v0.20.2/Documentation/kube-flannel.yml

    - name: Generate join token for worker nodes
      ansible.builtin.shell: sudo kubeadm token create --print-join-command
      register: join_node_token

    - name: Save join command as variable
      ansible.builtin.set_fact:
        join_node: "{{ join_node_token.stdout_lines[0] }}"

- name: Setup Worker Nodes
  hosts: worker
  become: true
  tasks:
    - name: Join worker nodes to cluster
      shell: "sudo {{ hostvars[groups['master'][0]].join_node }}"
